import { useEffect, useState, useCallback } from "react";
import { useRouter, useFocusEffect } from "expo-router";
import {
  View,
  Text,
  FlatList,
  TouchableOpacity,
  Alert,
  ActivityIndicator,
  SafeAreaView,
  Image,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";

// Thay th·∫ø ph·∫ßn MOCK_BLOGS c≈© b·∫±ng phi√™n b·∫£n m·ªõi n√†y
const BLOG_DATA = [
  {
    id: "1",
    title: "Top 5 D·ªãch V·ª• Massage ƒê∆∞·ª£c Y√™u Th√≠ch Nh·∫•t 2024",
    content:
      "Kh√°m ph√° 5 li·ªáu tr√¨nh massage ƒë∆∞·ª£c kh√°ch h√†ng ƒë√°nh gi√° cao nh·∫•t t·∫°i Beauty Care. T·ª´ massage Th·ª•y ƒêi·ªÉn cho ƒë·∫øn massage ƒë√° n√≥ng, m·ªói li·ªáu tr√¨nh ƒë·ªÅu mang ƒë·∫øn nh·ªØng tr·∫£i nghi·ªám th∆∞ gi√£n tuy·ªát v·ªùi v√† nhi·ªÅu l·ª£i √≠ch s·ª©c kh·ªèe...",
    author: {
      name: "Ng·ªçc Linh",
      avatar: "https://randomuser.me/api/portraits/women/1.jpg",
    },
    category: "Spa Review",
  },
  {
    id: "2",
    title: "Tr·∫£i Nghi·ªám Facial Premium V·ªõi C√¥ng Ngh·ªá M·ªõi",
    content:
      "C√¥ng ngh·ªá chƒÉm s√≥c da m·∫∑t m·ªõi nh·∫•t t·∫°i Beauty Care v·ªõi c√°c thi·∫øt b·ªã hi·ªán ƒë·∫°i v√† m·ªπ ph·∫©m cao c·∫•p. Quy tr√¨nh 90 ph√∫t cho l√†n da cƒÉng m·ªãn, r·∫°ng r·ª° t·ª©c th√¨...",
    author: {
      name: "Thu H√†",
      avatar: "https://randomuser.me/api/portraits/women/2.jpg",
    },
    category: "Beauty Review",
  },
  {
    id: "3",
    title: "ƒê√°nh Gi√° Chi Ti·∫øt ·ª®ng D·ª•ng ƒê·∫∑t L·ªãch M·ªõi",
    content:
      "Tr·∫£i nghi·ªám ƒë·∫∑t l·ªãch d·ªÖ d√†ng v·ªõi ·ª©ng d·ª•ng m·ªõi c·ªßa Beauty Care. Giao di·ªán th√¢n thi·ªán, t√≠nh nƒÉng ƒëa d·∫°ng v√† h·ªá th·ªëng t√≠ch ƒëi·ªÉm h·∫•p d·∫´n...",
    author: {
      name: "Minh Anh",
      avatar: "https://randomuser.me/api/portraits/men/1.jpg",
    },
    category: "App Review",
  },
  {
    id: "4",
    title: "Li·ªáu Tr√¨nh Detox Body - T√°i T·∫°o L√†n Da",
    content:
      "Kh√°m ph√° quy tr√¨nh detox body to√†n di·ªán k√©o d√†i 120 ph√∫t. K·∫øt h·ª£p t·∫©y da ch·∫øt, massage v√† ƒë·∫Øp m·∫∑t n·∫° th·∫£i ƒë·ªôc, gi√∫p l√†n da s√°ng m·ªãn v√† sƒÉn ch·∫Øc...",
    author: {
      name: "Thanh Th·∫£o",
      avatar: "https://randomuser.me/api/portraits/women/3.jpg",
    },
    category: "Service Review",
  },
  {
    id: "5",
    title: "Review G√≥i Spa C·∫∑p ƒê√¥i Cao C·∫•p",
    content:
      "Tr·∫£i nghi·ªám kh√¥ng gian l√£ng m·∫°n v√† ri√™ng t∆∞ v·ªõi g√≥i spa d√†nh cho c·∫∑p ƒë√¥i. C√°c li·ªáu tr√¨nh ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·∫∑c bi·ªát cho 2 ng∆∞·ªùi v·ªõi nh·ªØng d·ªãch v·ª• cao c·∫•p...",
    author: {
      name: "Ho√†ng Nam",
      avatar: "https://randomuser.me/api/portraits/men/2.jpg",
    },
    category: "Spa Review",
  },
  {
    id: "6",
    title: "ChƒÉm S√≥c T√≥c Premium - C√¥ng Ngh·ªá M·ªõi",
    content:
      "Tr·∫£i nghi·ªám d·ªãch v·ª• chƒÉm s√≥c t√≥c v·ªõi c√¥ng ngh·ªá v√† s·∫£n ph·∫©m nh·∫≠p kh·∫©u. Quy tr√¨nh 7 b∆∞·ªõc gi√∫p m√°i t√≥c ch·∫Øc kh·ªèe, su√¥n m∆∞·ª£t...",
    author: {
      name: "Mai H∆∞∆°ng",
      avatar: "https://randomuser.me/api/portraits/women/4.jpg",
    },
    category: "Beauty Review",
  },
  {
    id: "7",
    title: "Li·ªáu Tr√¨nh Gi·∫£m B√©o Hi·ªáu Qu·∫£",
    content:
      "Chia s·∫ª k·∫øt qu·∫£ sau 1 th√°ng tr·∫£i nghi·ªám li·ªáu tr√¨nh gi·∫£m b√©o. K·∫øt h·ª£p c√¥ng ngh·ªá hi·ªán ƒë·∫°i v√† massage gi·∫£m m·ª° chuy√™n s√¢u...",
    author: {
      name: "Th√πy Linh",
      avatar: "https://randomuser.me/api/portraits/women/5.jpg",
    },
    category: "Service Review",
  },
  {
    id: "8",
    title: "Nail Art Cao C·∫•p - Xu H∆∞·ªõng 2024",
    content:
      "Kh√°m ph√° b·ªô s∆∞u t·∫≠p nail art m·ªõi nh·∫•t v·ªõi c√°c m·∫´u ƒë·ªôc ƒë√°o v√† sang tr·ªçng. S·ª≠ d·ª•ng c√°c s·∫£n ph·∫©m cao c·∫•p v√† k·ªπ thu·∫≠t m·ªõi nh·∫•t...",
    author: {
      name: "Qu·ª≥nh Anh",
      avatar: "https://randomuser.me/api/portraits/women/6.jpg",
    },
    category: "Beauty Review",
  },
  {
    id: "9",
    title: "Massage Ch√¢n Cho D√¢n VƒÉn Ph√≤ng",
    content:
      "Gi·∫£i ph√°p th∆∞ gi√£n tuy·ªát v·ªùi cho d√¢n vƒÉn ph√≤ng v·ªõi li·ªáu tr√¨nh massage ch√¢n 60 ph√∫t. Gi√∫p gi·∫£m ƒëau nh·ª©c v√† l∆∞u th√¥ng m√°u...",
    author: {
      name: "ƒê·ª©c Minh",
      avatar: "https://randomuser.me/api/portraits/men/3.jpg",
    },
    category: "Spa Review",
  },
  {
    id: "10",
    title: "Tr·∫£i Nghi·ªám G√≥i VIP Member",
    content:
      "ƒê√°nh gi√° chi ti·∫øt c√°c ƒë·∫∑c quy·ªÅn c·ªßa g√≥i th√†nh vi√™n VIP t·∫°i Beauty Care. ∆Øu ƒë√£i ƒë·ªôc quy·ªÅn v√† d·ªãch v·ª• chƒÉm s√≥c kh√°ch h√†ng 5 sao...",
    author: {
      name: "H·ªìng Nhung",
      avatar: "https://randomuser.me/api/portraits/women/7.jpg",
    },
    category: "Service Review",
  },
];

// Chuy·ªÉn ƒë·ªïi BLOG_DATA th√†nh MOCK_BLOGS v·ªõi ƒë·∫ßy ƒë·ªß th√¥ng tin
const MOCK_BLOGS = BLOG_DATA.map((blog) => ({
  ...blog,
  rating: 4 + Math.random() * 0.9, // Rating t·ª´ 4.0 ƒë·∫øn 4.9
  date: new Date(
    Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000
  ).toLocaleDateString("vi-VN"), // Trong v√≤ng 30 ng√†y
  image: `https://source.unsplash.com/random/800x600?spa,beauty,massage&sig=${blog.id}`,
  likes: 10 + Math.floor(Math.random() * 90), // 10-99 likes
  comments: 5 + Math.floor(Math.random() * 45), // 5-49 comments
}));

// Gi·∫£m ITEMS_PER_PAGE xu·ªëng v√¨ ch·ªâ c√≥ 10 b√†i
const ITEMS_PER_PAGE = 5;

const ReviewPage = () => {
  const router = useRouter();
  const [blogs, setBlogs] = useState([]);
  const [loading, setLoading] = useState(true);
  const [page, setPage] = useState(1);
  const [refreshing, setRefreshing] = useState(false);
  const [hasMore, setHasMore] = useState(true);

  // Load blogs v·ªõi pagination
  const loadBlogs = useCallback((pageNum = 1, shouldRefresh = false) => {
    setLoading(true);
    // Gi·∫£ l·∫≠p API call
    setTimeout(() => {
      const startIndex = (pageNum - 1) * ITEMS_PER_PAGE;
      const endIndex = startIndex + ITEMS_PER_PAGE;
      const newBlogs = MOCK_BLOGS.slice(startIndex, endIndex);

      if (shouldRefresh) {
        setBlogs(newBlogs);
      } else {
        setBlogs((prev) => [...prev, ...newBlogs]);
      }

      setHasMore(endIndex < MOCK_BLOGS.length);
      setLoading(false);
      setRefreshing(false);
    }, 1000);
  }, []);

  // Initial load
  useEffect(() => {
    loadBlogs(1, true);
  }, []);

  // Pull to refresh
  const onRefresh = useCallback(() => {
    setRefreshing(true);
    setPage(1);
    loadBlogs(1, true);
  }, []);

  // Load more
  const loadMore = () => {
    if (!loading && hasMore) {
      const nextPage = page + 1;
      setPage(nextPage);
      loadBlogs(nextPage);
    }
  };

  const renderRatingStars = (rating: number) => {
    return (
      <View style={{ flexDirection: "row", marginVertical: 4 }}>
        {Array.from({ length: 5 }).map((_, index) => (
          <Ionicons
            key={index}
            name={index < Math.floor(rating) ? "star" : "star-outline"}
            size={16}
            color="#FFD700"
          />
        ))}
        <Text className="ml-2 text-gray-600">({rating.toFixed(1)})</Text>
      </View>
    );
  };

  const renderBlogItem = ({ item }) => (
    <TouchableOpacity
      onPress={() => router.push(`/(blog-flow)/${item.id}`)}
      className="bg-white rounded-lg shadow-sm mb-4 overflow-hidden"
    >
      <Image
        source={{ uri: item.image }}
        className="w-full h-40"
        resizeMode="cover"
      />
      <View className="p-4">
        <View className="flex-row items-center mb-2">
          <Image
            source={{ uri: item.author.avatar }}
            className="w-8 h-8 rounded-full"
          />
          <View className="ml-2">
            <Text className="text-sm font-medium text-gray-900">
              {item.author.name}
            </Text>
            <Text className="text-xs text-gray-500">{item.date}</Text>
          </View>
        </View>

        <Text className="text-xs text-blue-500 mb-2">{item.category}</Text>
        <Text className="text-lg font-bold text-gray-900 mb-2">
          {item.title}
        </Text>
        <Text className="text-gray-600 mb-2" numberOfLines={2}>
          {item.content}
        </Text>

        {renderRatingStars(item.rating)}

        <View className="flex-row justify-between items-center mt-3">
          <View className="flex-row items-center">
            <Ionicons name="heart-outline" size={20} color="#666" />
            <Text className="ml-1 text-gray-600">{item.likes}</Text>
          </View>
          <View className="flex-row items-center">
            <Ionicons name="chatbubble-outline" size={20} color="#666" />
            <Text className="ml-1 text-gray-600">{item.comments}</Text>
          </View>
        </View>
      </View>
    </TouchableOpacity>
  );

  return (
    <SafeAreaView className="flex-1 bg-gray-100">
      <View className="px-4 py-3 bg-white border-b border-gray-200">
        <Text className="text-2xl font-bold text-gray-800">
          üì¢ ƒê√°nh Gi√° & Blog
        </Text>
      </View>

      <TouchableOpacity
        onPress={() => router.push("/(blog-flow)/new")}
        className="mx-4 mt-4 mb-2 bg-blue-500 p-4 rounded-lg flex flex-row justify-center items-center shadow-md"
      >
        <Text className="text-white text-lg font-semibold">
          ‚úçÔ∏è Vi·∫øt ƒê√°nh Gi√°
        </Text>
      </TouchableOpacity>

      <FlatList
        data={blogs}
        renderItem={renderBlogItem}
        keyExtractor={(item) => item.id}
        contentContainerStyle={{ padding: 16 }}
        onEndReached={loadMore}
        onEndReachedThreshold={0.5}
        refreshing={refreshing}
        onRefresh={onRefresh}
        ListFooterComponent={() =>
          loading && !refreshing ? (
            <ActivityIndicator size="large" color="#007AFF" className="py-4" />
          ) : null
        }
        ListEmptyComponent={() =>
          !loading && (
            <Text className="text-gray-500 text-center mt-6">
              Ch∆∞a c√≥ ƒë√°nh gi√° n√†o. H√£y l√† ng∆∞·ªùi ƒë·∫ßu ti√™n!
            </Text>
          )
        }
      />
    </SafeAreaView>
  );
};

export default ReviewPage;
